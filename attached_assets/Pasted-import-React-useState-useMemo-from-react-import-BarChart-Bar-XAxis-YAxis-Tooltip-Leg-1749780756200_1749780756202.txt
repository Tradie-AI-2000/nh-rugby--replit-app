import React, { useState, useMemo } from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';
import { ChevronsRight, Shield, Heart, Target, TrendingUp, FileText, User, DollarSign, Zap, Weight, ArrowRight, Star, AlertTriangle, CheckCircle } from 'lucide-react';

// --- MOCK DATA ---
// In a real application, this would come from a database (like Firestore) or a CSV upload.
const initialPlayers = [
    {
        id: 1,
        name: 'James Parsons',
        photoUrl: 'https://placehold.co/150x150/003366/FFFFFF?text=JP',
        position: 'Hooker',
        secondaryPosition: 'Back Row',
        height: 185, // cm
        weight: 108, // kg
        club: 'Takapuna RFC',
        teamHistory: ['North Harbour', 'Blues'],
        dateSigned: '2022-11-01',
        offContractDate: '2025-10-31',
        contractValue: 85000,
        // Performance & Cohesion Metrics
        attendanceScore: 9.5, // out of 10
        scScore: 8.8, // S&C score out of 10
        medicalScore: 9.8, // Robustness score out of 10
        personalityScore: 9.2, // Coachability, team-first attitude etc. out of 10
        gritNote: 'Overcame a significant calf injury in 2023, showing incredible dedication during rehab to return ahead of schedule.',
        communityNote: 'Actively volunteers with the "Rugby in Schools" program.',
        familyBackground: 'Father was a professional builder, mother is a teacher. Strong work ethic instilled from a young age.',
        // Game Stats (from CSV analysis)
        minutesPlayed: 580,
        totalContributions: 240,
        positiveContributions: 205,
        negativeContributions: 35,
        penaltyCount: 4,
        xFactorContributions: 15,
        sprintTime10m: 1.81,
    },
    {
        id: 2,
        name: 'Bryn Gatland',
        photoUrl: 'https://placehold.co/150x150/003366/FFFFFF?text=BG',
        position: 'First Five-Eighth',
        secondaryPosition: 'Fullback',
        height: 178,
        weight: 88,
        club: 'Massey RFC',
        teamHistory: ['North Harbour', 'Highlanders', 'Chiefs'],
        dateSigned: '2023-05-15',
        offContractDate: '2024-10-31',
        contractValue: 110000,
        attendanceScore: 9.8,
        scScore: 9.1,
        medicalScore: 8.5,
        personalityScore: 9.5,
        gritNote: 'Transitioned from a different union, had to adapt quickly to new systems and prove himself to a new squad.',
        communityNote: 'Passionate about mental health advocacy in sport.',
        familyBackground: 'Comes from a high-performance rugby family, understands the pressures and demands of the professional environment.',
        minutesPlayed: 640,
        totalContributions: 310,
        positiveContributions: 280,
        negativeContributions: 30,
        penaltyCount: 2,
        xFactorContributions: 25,
        sprintTime10m: 1.72,
    },
    {
        id: 3,
        name: 'Lotu Inisi',
        photoUrl: 'https://placehold.co/150x150/003366/FFFFFF?text=LI',
        position: 'Back Row',
        secondaryPosition: 'Lock',
        height: 190, // cm
        weight: 112, // kg
        club: 'North Shore RFC',
        teamHistory: ['North Harbour', 'Moana Pasifika'],
        dateSigned: '2021-11-01',
        offContractDate: '2025-10-31',
        contractValue: 95000,
        attendanceScore: 9.0,
        scScore: 9.5,
        medicalScore: 9.5,
        personalityScore: 8.9,
        gritNote: 'Known for playing through minor injuries and consistently putting the team first. Sacrificial mindset is a hallmark of his play.',
        communityNote: 'Leads a local youth group and is a role model in his community.',
        familyBackground: 'Deeply connected to his cultural roots, which is a source of his strength and motivation.',
        minutesPlayed: 720,
        totalContributions: 350,
        positiveContributions: 300,
        negativeContributions: 50,
        penaltyCount: 7,
        xFactorContributions: 18,
        sprintTime10m: 1.78,
    }
];

// --- POSITIONAL NON-NEGOTIABLES ---
const positionalSkills = {
    'Prop': ['Excellent Scrum & Lineout', 'Strong Iron/Steel Carry', 'Early Skill Set Service', 'Dominant 10-60m Defense', '50min+ Capacity'],
    'Hooker': ['World Class Throwing', 'Max Damage at Scrum', 'Hip Flexibility (Channel 1)', 'Can Play on Edge (like Back Row)', 'High Sprint Momentum', '80min Engine'],
    'Lock': ['World Class Lineout IQ', 'Outstanding Aerial Skills', 'Scrum/Maul Endurance + Sprint', 'Brutal at Gain Line (Attack/Defense)', 'Early Skill Set Service', 'Huge Engine (Unseen Work)', 'Physical Minimum: 6\'7+, 118-122kg'],
    'Back Row': ['Brutal at Gain Line', 'Turnover Ability', 'Operates on the Edge (Attack/Defense)', 'Can Play in Midfield', 'High Sprint Momentum', 'Physical Minimum: 6ft+, 100kg+'],
    'Scrum-half': ['Outstanding Pass (Both Hands)', 'Great Communication', 'Pressure-Relieving Kick', 'Acceleration & Speed', 'World Class Capacity', 'Defends Anywhere'],
    'First Five-Eighth': ['Controls Game & Tempo', 'World Class Pass (Both Hands)', 'Kicks off Either Foot', 'Shifts Ball to Space Quickly', 'Plays Flat', 'Challenges Defensive Line', 'Top-tier Communication'],
    'Midfield': ['Brutal in Collisions', 'Quick Hands (In & Out)', 'Top-tier Communication', 'Kicks off Both Feet', 'Operates on Both Edges', 'Offloading Skills (KBA)', 'High Sprint Momentum', 'Speed'],
    'Back 3': ['Brave', 'High Ball Skills (Low Error)', 'High Offload Count (KBA)', 'Robust 80min Capacity', 'Great Open Field Defender', 'Top End Speed & Acceleration', 'X-Factor Game Breaker', 'Varied Kicking Game'],
};


// --- HELPER COMPONENTS ---

const StatCard = ({ icon, title, value, unit = '', color = 'text-gray-100', bgColor = 'bg-gray-800' }) => (
    <div className={`${bgColor} p-4 rounded-xl shadow-lg flex flex-col justify-between`}>
        <div className="flex items-center text-gray-400">
            {icon}
            <span className="ml-2 text-sm font-medium">{title}</span>
        </div>
        <div className={`text-3xl font-bold mt-2 ${color}`}>
            {value} <span className="text-lg font-medium text-gray-300">{unit}</span>
        </div>
    </div>
);

const CohesionGauge = ({ score }) => {
    const percentage = score * 10;
    const color = percentage > 85 ? 'text-teal-400' : percentage > 70 ? 'text-yellow-400' : 'text-red-400';
    const circumference = 2 * Math.PI * 45;
    const offset = circumference - (percentage / 100) * circumference;

    return (
        <div className="relative flex items-center justify-center">
            <svg className="transform -rotate-90 w-32 h-32">
                <circle cx="64" cy="64" r="45" stroke="currentColor" strokeWidth="10" fill="transparent" className="text-gray-700" />
                <circle cx="64" cy="64" r="45" stroke="currentColor" strokeWidth="10" fill="transparent" strokeDasharray={circumference} strokeDashoffset={offset} className={`transition-all duration-1000 ease-in-out ${color}`} />
            </svg>
            <div className={`absolute text-3xl font-bold ${color}`}>
                {score.toFixed(1)}
            </div>
        </div>
    );
};

const ValueAnalysis = ({ playerValue, contractValue }) => {
    const ratio = playerValue / contractValue;
    let analysisText, colorClass;

    if (ratio > 1.2) {
        analysisText = 'Significantly Undervalued';
        colorClass = 'bg-green-500 text-white';
    } else if (ratio > 1.05) {
        analysisText = 'Undervalued';
        colorClass = 'bg-teal-500 text-white';
    } else if (ratio >= 0.95) {
        analysisText = 'Fair Value';
        colorClass = 'bg-blue-500 text-white';
    } else {
        analysisText = 'Overvalued';
        colorClass = 'bg-amber-500 text-white';
    }

    return (
        <div className="bg-gray-800 p-4 rounded-xl shadow-lg">
            <h3 className="text-lg font-semibold text-white mb-3 flex items-center"><DollarSign className="mr-2" /> Value Analysis</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-center">
                <div>
                    <p className="text-sm text-gray-400">Contract Value</p>
                    <p className="text-2xl font-bold text-white">${contractValue.toLocaleString()}</p>
                </div>
                <div>
                    <p className="text-sm text-gray-400">Calculated Value Index</p>
                    <p className="text-2xl font-bold text-green-400">${playerValue.toLocaleString()}</p>
                </div>
            </div>
            <div className={`mt-4 p-2 rounded-lg text-center font-semibold ${colorClass}`}>
                {analysisText}
            </div>
            <p className="text-xs text-gray-500 mt-2 text-center">Calculated value is a proprietary index based on performance, cohesion, and physical metrics against market averages.</p>
        </div>
    );
};


// --- MAIN APP COMPONENT ---
export default function App() {
    const [players, setPlayers] = useState(initialPlayers);
    const [selectedPlayer, setSelectedPlayer] = useState(players[0]);

    // --- "MONEYBALL" CALCULATIONS ---
    const playerMetrics = useMemo(() => {
        if (!selectedPlayer) return {};

        const {
            minutesPlayed, totalContributions, positiveContributions, negativeContributions,
            sprintTime10m, weight, xFactorContributions, attendanceScore, scScore, medicalScore,
            personalityScore, contractValue
        } = selectedPlayer;

        const workRate = totalContributions > 0 ? (minutesPlayed / totalContributions).toFixed(2) : 0;
        const wei = totalContributions > 0 ? ((positiveContributions - negativeContributions) / totalContributions) * 100 : 0;
        const sprintMomentum = sprintTime10m > 0 ? ((10 / sprintTime10m) * weight).toFixed(0) : 0;
        const positiveContributionPercent = totalContributions > 0 ? (positiveContributions / totalContributions) * 100 : 0;
        const xFactorPercent = totalContributions > 0 ? (xFactorContributions / totalContributions) * 100 : 0;
        
        // --- COHESION SCORE CALCULATION (Weighted Average) ---
        // Weights can be adjusted based on coaching philosophy.
        const cohesionScore = 
            (attendanceScore * 0.25) + // Attendance and reliability
            (scScore * 0.20) +       // Commitment to physical prep
            (medicalScore * 0.25) +  // Robustness and availability
            (personalityScore * 0.30); // Grit, team-first mentality, coachability

        // --- PLAYER VALUE CALCULATION ---
        // A proprietary formula to create a dollar value based on key metrics.
        // This is a simplified example. A real model would be more complex.
        const baseValue = 50000;
        const performanceValue = (wei * 500) + (workRate < 3 ? (3 - workRate) * 5000 : 0);
        const physicalValue = (sprintMomentum - 500 > 0 ? (sprintMomentum - 500) * 100 : 0);
        const cohesionValue = (cohesionScore * 5000);
        const calculatedPlayerValue = Math.round(baseValue + performanceValue + physicalValue + cohesionValue);


        return {
            workRate,
            wei,
            sprintMomentum,
            positiveContributionPercent,
            xFactorPercent,
            cohesionScore,
            calculatedPlayerValue,
            performanceData: [
                { name: 'Positive', value: positiveContributions, fill: '#4ade80' },
                { name: 'Negative', value: negativeContributions, fill: '#f87171' },
            ]
        };
    }, [selectedPlayer]);

    const handlePlayerSelect = (player) => {
        setSelectedPlayer(player);
    };

    // Helper to format date
    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleDateString('en-NZ', { year: 'numeric', month: 'long', day: 'numeric' });
    };

    if (!selectedPlayer) {
        return <div className="bg-gray-900 text-white h-screen flex items-center justify-center">Loading Player Data...</div>
    }
    
    const playerPosition = selectedPlayer.position.includes('-') ? selectedPlayer.position.split('-')[1] : selectedPlayer.position;
    const skillsForPosition = positionalSkills[playerPosition] || [];

    return (
        <div className="bg-gray-900 min-h-screen font-sans text-white p-4 sm:p-6 lg:p-8">
            <div className="flex flex-col lg:flex-row gap-8">
                {/* --- LEFT SIDEBAR: PLAYER LIST --- */}
                <aside className="lg:w-1/4 xl:w-1/5 bg-gray-800 p-4 rounded-xl shadow-2xl">
                    <h2 className="text-xl font-bold text-white border-b-2 border-harbour-blue pb-2 mb-4">North Harbour Squad</h2>
                    <div className="space-y-2">
                        {players.map(p => (
                            <button
                                key={p.id}
                                onClick={() => handlePlayerSelect(p)}
                                className={`w-full text-left p-3 rounded-lg flex items-center transition-all duration-200 ${selectedPlayer.id === p.id ? 'bg-harbour-blue text-white shadow-md' : 'bg-gray-700 hover:bg-gray-600'}`}
                            >
                                <img src={p.photoUrl} alt={p.name} className="w-10 h-10 rounded-full mr-3 border-2 border-gray-500"/>
                                <div>
                                    <p className="font-semibold">{p.name}</p>
                                    <p className="text-xs text-gray-300">{p.position}</p>
                                </div>
                            </button>
                        ))}
                    </div>
                     <div className="mt-6 p-3 bg-gray-700 rounded-lg text-center">
                        <p className="text-sm font-semibold">WTP/ATP Pathways</p>
                        <p className="text-xs text-gray-400 mt-1">Focus on MLR & Club talent pipelines for sustainable growth.</p>
                    </div>
                </aside>

                {/* --- RIGHT CONTENT: PLAYER PROFILE --- */}
                <main className="flex-1">
                    {/* Player Header */}
                    <div className="bg-gray-800 p-6 rounded-xl shadow-2xl flex flex-col sm:flex-row items-center gap-6 mb-8">
                        <img src={selectedPlayer.photoUrl} alt={selectedPlayer.name} className="w-32 h-32 rounded-full border-4 border-harbour-blue shadow-lg"/>
                        <div className="text-center sm:text-left">
                            <h1 className="text-4xl font-extrabold">{selectedPlayer.name}</h1>
                            <p className="text-xl text-gray-300">{selectedPlayer.position} | {selectedPlayer.secondaryPosition}</p>
                            <div className="flex justify-center sm:justify-start gap-4 mt-2 text-gray-400">
                                <span>{selectedPlayer.height}cm</span>
                                <span>{selectedPlayer.weight}kg</span>
                                <span>{selectedPlayer.club}</span>
                            </div>
                        </div>
                        <div className="sm:ml-auto">
                            <CohesionGauge score={playerMetrics.cohesionScore} />
                            <p className="text-center mt-2 text-sm font-semibold">Cohesion Score</p>
                        </div>
                    </div>

                    {/* Main Grid */}
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                       
                        {/* Key Metrics */}
                        <StatCard icon={<TrendingUp size={20}/>} title="Work Efficiency Index (WEI)" value={playerMetrics.wei.toFixed(1)} unit="%" color="text-green-400"/>
                        <StatCard icon={<Zap size={20}/>} title="High Sprint Momentum" value={playerMetrics.sprintMomentum} unit="kg·m/s" color={playerMetrics.sprintMomentum > 600 ? 'text-orange-400' : 'text-blue-400'}/>
                        <StatCard icon={<Heart size={20}/>} title="Work Rate (Min/Contrib.)" value={playerMetrics.workRate} unit="min" color={playerMetrics.workRate < 3 ? 'text-green-400' : 'text-yellow-400'}/>
                        <StatCard icon={<Star size={20}/>} title="X-Factor" value={playerMetrics.xFactorPercent.toFixed(1)} unit="%" color="text-purple-400"/>

                        {/* Contract & Value */}
                        <div className="md:col-span-2 xl:col-span-2">
                             <ValueAnalysis playerValue={playerMetrics.calculatedPlayerValue} contractValue={selectedPlayer.contractValue} />
                        </div>
                        
                        <div className="bg-gray-800 p-4 rounded-xl shadow-lg md:col-span-2 xl:col-span-2">
                             <h3 className="text-lg font-semibold text-white mb-2 flex items-center"><FileText className="mr-2" /> Contract Details</h3>
                             <div className="space-y-2 text-sm">
                                <div className="flex justify-between">
                                    <span className="text-gray-400">Signed:</span>
                                    <span className="font-medium">{formatDate(selectedPlayer.dateSigned)}</span>
                                </div>
                                <div className="flex justify-between">
                                    <span className="text-gray-400">Off Contract:</span>
                                    <span className="font-medium">{formatDate(selectedPlayer.offContractDate)}</span>
                                </div>
                                <div className="flex justify-between">
                                    <span className="text-gray-400">Team History:</span>
                                    <span className="font-medium">{selectedPlayer.teamHistory.join(', ')}</span>
                                </div>
                             </div>
                        </div>

                        {/* Contribution Analysis Chart */}
                        <div className="bg-gray-800 p-4 rounded-xl shadow-lg md:col-span-2">
                             <h3 className="text-lg font-semibold text-white mb-4 flex items-center"><BarChart className="mr-2" /> Contribution Analysis</h3>
                             <ResponsiveContainer width="100%" height={200}>
                                <PieChart>
                                    <Pie data={playerMetrics.performanceData} dataKey="value" nameKey="name" cx="50%" cy="50%" outerRadius={80} label>
                                       {playerMetrics.performanceData.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.fill} />)}
                                    </Pie>
                                    <Tooltip contentStyle={{ backgroundColor: '#2d3748', border: 'none', borderRadius: '8px' }}/>
                                    <Legend />
                                </PieChart>
                             </ResponsiveContainer>
                        </div>

                        {/* Qualitative Notes */}
                        <div className="bg-gray-800 p-4 rounded-xl shadow-lg md:col-span-2">
                             <h3 className="text-lg font-semibold text-white mb-2 flex items-center"><User className="mr-2" /> Character & Intangibles</h3>
                             <div className="space-y-3 text-sm">
                                <div>
                                    <strong className="text-gray-300">Grit / Adversity:</strong>
                                    <p className="text-gray-400 italic mt-1">"{selectedPlayer.gritNote}"</p>
                                </div>
                                <div>
                                    <strong className="text-gray-300">Community / "Why":</strong>
                                    <p className="text-gray-400 mt-1">{selectedPlayer.communityNote}</p>
                                </div>
                                 <div>
                                    <strong className="text-gray-300">Background:</strong>
                                    <p className="text-gray-400 mt-1">{selectedPlayer.familyBackground}</p>
                                </div>
                             </div>
                        </div>

                        {/* Positional Non-Negotiables */}
                        <div className="bg-gray-800 p-4 rounded-xl shadow-lg md:col-span-2 lg:col-span-4">
                             <h3 className="text-lg font-semibold text-white mb-3 flex items-center"><Shield className="mr-2" /> Positional Non-Negotiables: <span className="text-harbour-blue ml-2">{playerPosition}</span></h3>
                             <ul className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2">
                                {skillsForPosition.map((skill, index) => (
                                    <li key={index} className="flex items-center text-sm">
                                        <CheckCircle size={16} className="text-green-400 mr-2 flex-shrink-0"/>
                                        <span className="text-gray-300">{skill}</span>
                                    </li>
                                ))}
                             </ul>
                        </div>
                         <div className="bg-gray-800 p-4 rounded-xl shadow-lg md:col-span-2 lg:col-span-4">
                             <h3 className="text-lg font-semibold text-white mb-3 flex items-center"><AlertTriangle className="mr-2 text-red-400" /> Development Focus</h3>
                             <p className="text-sm text-gray-400">Based on analysis, focus areas are: improving decision-making under pressure to reduce negative contributions and increasing explosive power to further boost sprint momentum.</p>
                        </div>

                    </div>
                </main>
            </div>
        </div>
    );
}

// --- STYLING (TAILWIND CONFIG) ---
// This is to define our custom brand color for Tailwind.
// In a real Replit project, you'd add this to your tailwind.config.js
/*
module.exports = {
  theme: {
    extend: {
      colors: {
        'harbour-blue': '#00AEEF', // North Harbour's signature blue
      },
    },
  },
  variants: {},
  plugins: [],
}
*/

// To make this self-contained, we'll inject the style directly.
const style = document.createElement('style');
style.innerHTML = `
    .bg-harbour-blue { background-color: #00AEEF; }
    .text-harbour-blue { color: #00AEEF; }
    .border-harbour-blue { border-color: #00AEEF; }

    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');
    body {
        font-family: 'Inter', sans-serif;
    }
`;
document.head.appendChild(style);

